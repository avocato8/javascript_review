//var 키워드로 선언한 변수와 달리 let키워드로 선언한
//변수는 변수 호이스팅이 발생하지 않는 것처럼 동작

console.log(foo);// ReferenceError
let foo;
console.log(foo); //undefined
foo = 1;
console.log(foo); // 1

//var 키워드로 선언한 변수는 런타임 이전에 자바스크립트 엔진에 의해
//선언 단계와 초기화 단계가 한번에 진행
// // 선언 단계에서 스코프에 변수 식별자를 등록해
// 자바스크립트 엔진에 변수의 존재를 알린다.
//그리고 즉시 초기화 단계에서 undefined로 변수를 초기화

//let 키워드로 선언한 변수는 선언 단계와 초기화 단계가 분리되어 진행
//런타임 이전에 자바스크립트 엔진에 의해 선언 단계가 실행되지만
//초기화 단계는 변수 선언문에 도달했을 때 실행

//초기화 단계 실행 이전에 변수에 접근하려고 하념 참조 에러 발생
//스코프의 시작 지점부터 초기화 시작 지점까지 변수를 참조할 수 없는 구간을
//일시적 사각지대 라고 한다.

//let키워드로 선언한 변수도 변수 호이스팅은 발생한다.
// let foo = 1;
{
    console.log(foo); //ReferenceError
    let foo = 2;
}
//변수 호이스팅이 발생하지 않는다면 이 예제는 전역 변수 foo의 값을
//출력해야 한다.
