//원시값은 변경 불가능한 값이다.
const o = {};

//const 키워드를 사용해 선언한 변수에 할당한 원시 값은 변경할 수 없다.
//하지만 const 키워드를 사용해 선언한 변수에 할당한 객체를 변경할 수 있다.
o.a = 1;
console.log(o); // {a: 1}

//원시 값을 할당한 변수에 새로운 원시 값을 재할당하면
//메모리 공간에 저장되어 있는 재할당 이전의 원시 값을 변경하는 것이 아니라,
//새로운 메모리 공간을 확보하고 재할당한 원시 값을 저장한 후,
//변수는 새롭게 재할당한 원시 값을 가리킨다.

//----------문자열과 불변성----------
//원시 값을 저장하려면 먼저 확보해야 하는 메모리 공간의 크기를 결정
//이를 위해 원시 타입별로 메모리 공간의 크기가 미리 정해져 있다.

//문자열 타입 (2바이트), 숫자 타입(8바이트)
//문자열은 0개 이상의 문자로 이뤄진 집합을 말하며, 1개의 문자는 2바이트의 메모리 공간에 저장
//1개의 문자로 이뤄진 문자열은 2바이트, 10개의 문자로 이뤄진 문자열은 20바이트가 필요

//이 같은 이유로 C에서는 하나의 문자를 위한 데이터 타입(char)만 있을 뿐
//문자열 타입은 존재하지 않는다. C에서는 문자열을 문자의 배열로 처리

//자바스크립트는 편의를 위해 문자열 타입을 제공
var str = "Hello";
str = "world";

//문자열은 유사 배열 객체이면서 이터러블이므로 배열과 유사하게 각 문자에 접근 가능
var str = "string";
console.log(str[0]); //s

//원시 값인 문자열이 객체처럼 동작
console.log(str.length);
console.log(str.toUpperCase()); //STRING
//하지만 문자열은 원시 값이므로 변경할 수 없다.
str[0] = "S";

console.log(str); //string

//----------값에 의한 전달----------
var score = 80;
var copy = score;

console.log(score); // 80
console.log(copy); // 80

score = 100;
console.log(score); // 100
console.log(copy); //80
